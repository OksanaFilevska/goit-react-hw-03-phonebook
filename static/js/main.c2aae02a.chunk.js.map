{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","htmlFor","span","input","type","onChange","id","pattern","title","required","btn","Component","defaultProps","ContactList","contacts","onDeleteContact","map","item","btnList","onClick","filterInputId","Filter","filter","onChangeFilter","App","addContact","entry","some","toLowerCase","alert","getVisibleContacts","normalizedFilter","contact","includes","deleteContact","contactId","prevState","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2aae02a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3lMMR\",\"item\":\"ContactList_item__1Z39A\",\"btnList\":\"ContactList_btnList__1k735\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3i1MH\",\"span\":\"Filter_span__1nWNF\",\"input\":\"Filter_input__2N9wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__UVFDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__kW4xa\",\"span\":\"ContactForm_span__3vYzz\",\"btn\":\"ContactForm_btn__YJM65\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          <span className={s.span}>Name</span>\r\n\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId}>\r\n          <span className={s.span}>Number</span>\r\n\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className=\"s.list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.item}>\r\n        <p className=\"s.contacts\">\r\n          {name}: <span>{number}</span>\r\n        </p>\r\n        <button type=\"button\" className={s.btnList} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport shortid from 'shortid';\r\n\r\nconst filterInputId = shortid.generate();\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label htmlFor={filterInputId}>\r\n      <span className={s.span}>Find contacts by name and number</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const entry = {\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    };\n    contacts.some(({ name }) => name.toLowerCase() === entry.name.toLowerCase())\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [entry, ...contacts] }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) || contact.number.includes(filter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChangeFilter={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}